<?xml version="1.0" encoding="UTF-8"?>
<!--start main rule, only theme if #visual-portal-wrapper exist -->
<rules
    xmlns="http://namespaces.plone.org/diazo"
    xmlns:css="http://namespaces.plone.org/diazo/css"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    css:if-content="#visual-portal-wrapper">
    
    <!--HEAD SECTION-->
    <!-- Drop styles in the head - these are added back by including them from Plone -->
    <drop theme="/html/head/style | /html/head/script | /html/head/link | /html/head/title" />
    <prepend theme="/html/head" content="/html/head/base | /html/head/link | /html/head/style | /html/head/script | /html/head/meta | /html/head/title" />
    <copy theme="/html" content="/html" attributes="lang"/>
    <merge theme="/html/body" content="/html/body" attributes="class"/>
    <merge theme="/html/body" content="/html/body" attributes="dir"/>
    <merge theme="/html/body" css:content="meta[name='wcc.subsite']" attributes="class"/>
    <append css:theme="body" css:content="#plone-analytics"/>
    <prepend css:theme=".colorstrip-inner" css:content="#portal-personaltools"/>

    <!--logo-->
    <replace css:theme="#logo" css:content="#portal-logo > a"/>
    <drop theme="//p[contains(@class, 'tagline')]" if-content="//a[contains(@title, 'Bossey')]" />
    <replace css:theme-children=".tagline" css:content-children="#portal-logo .logo-description"/>

    <!-- search -->
    <replace css:theme-children=".top-right-container .search-container">
        <form class="search-portlet"><xsl:attribute name="action">
            <xsl:value-of select="//*[@id='portal-searchbox']/form/@action"/></xsl:attribute>
            <xsl:copy-of css:select="#portal-searchbox input[name='SearchableText']"/>
            <xsl:copy-of css:select="#portal-searchbox input.searchButton"/>
            <xsl:copy-of css:select="#LSResult"/>
        </form>
    </replace>
    
    <!--navigation-->
    <replace css:theme-children='#portal-globalnav' css:content-children='#portal-globalnav' />
    <!--language-->
    <replace css:theme-children='#portal-languageselector' css:content-children='#portal-languageselector'/>
    
    <replace css:theme-children=".footer-link" css:content-children="#portal-siteactions"/>
    
    <!--event listing-->
    <xsl:template match="table">
        <div class="event-listing-wrapper"><xsl:apply-templates select="tbody"/></div>
    </xsl:template>
    <xsl:template match="//tr[@class='featureimagelisting-row']">
        <div class="row event-row">
            <div class="large-3 medium-3 columns event-image">
                  <xsl:copy-of select="td[1]/*"/>
            </div>
            <div class="large-9 medium-9 columns event-details">
                  <xsl:copy-of select="td[2]/*"/>
            </div>
        </div>
    </xsl:template>
    
    <!--content-->
    <replace css:theme-children="div.main-page" css:content-children="#portal-column-content" />
    <replace css:theme-children=".sidebar-left" css:if-content-children="#portal-column-one">
        <xsl:for-each css:select="#portal-column-one .portletWrapper">
            <xi:include href="portlet-rules.xml"/>
        </xsl:for-each>
        <xsl:copy-of css:select="#portletmanager-plone-leftcolumn"/>
        <xsl:copy-of css:select="#portal-column-one .managePortletsLink"/>
    </replace>
    <replace css:theme-children=".sidebar-right" css:if-content-children="#portal-column-two">
        <xsl:for-each css:select="#portal-column-two .portletWrapper">
            <xi:include href="portlet-rules.xml"/>
        </xsl:for-each>
        <xsl:copy-of css:select="#portletmanager-plone-rightcolumn"/>
        <xsl:copy-of css:select="#portal-column-two .managePortletsLink"/>
    </replace>

    <!--subsite homepage-->
    <rules css:if-content="#homepage-view.homepage-full-width">
        <theme href="index-subsite.html"/>
        <replace css:theme-children=".subsite-news-container">
            <xsl:for-each css:select="#homepage-news .homepage-newsitem">
                <div class="large-4 columns">
                    <div class="news-item">
                        <xsl:if test="div/div/img">
                            <h2><xsl:copy-of select="div/div/h3/a"/></h2>
                            <xsl:copy-of select="div/div/img"/>
                            <p><xsl:value-of select="div/div/p/text()"/></p>
                        </xsl:if>
                        <xsl:if test="not(div/div/img)">
                            <h2><xsl:copy-of select="div/div/h3/a"/></h2>
                            <p><xsl:value-of select="div/div/p/text()"/></p>
                        </xsl:if>
                    </div>
                </div>
            </xsl:for-each>
        </replace>
    </rules>
    
    <rules css:if-content="#homepage2-view.homepage-view">
        <theme href="index-subsite.html"/>
        <replace css:theme-children=".subsite-news-container">
            <div class="large-12 column">
                <div class="news-item">
                    <xsl:copy-of css:select="#homepage2-bodytext > div"/>
                </div>
            </div>
        </replace>
    </rules>
    
    <rules css:if-content="#homepage3-view.homepage-view">
        <theme href="index-subsite.html"/>
        <replace css:theme-children=".subsite-news-container">
            <xsl:for-each css:select="#homepage3-newsblock > div.news-cell.cell > div:nth-child(1) > div.cell">
                <div class="large-4 columns">
                    <div class="news-item">
                        <xsl:if test="div[1]/img">
                            <h2><xsl:copy-of select="div[2]/h3/a"/></h2>
                            <xsl:copy-of select="div[1]/img"/>
                            <p><xsl:value-of select="div[2]/p/text()"/></p>
                        </xsl:if>
                        <xsl:if test="not(div[1]/img)">
                            <h2><xsl:copy-of select="div[2]/h3/a"/></h2>
                            <p><xsl:value-of select="div[2]/p/text()"/></p>
                        </xsl:if>
                    </div>
                </div>
            </xsl:for-each>
        </replace>
        <replace css:theme-children=".sidebar-right" css:content=".homepage3-text" />
    </rules>
    
    <rules css:if-content="#homepage4-view.homepage-view">
        <theme href="index-subsite.html"/>
        <replace css:theme-children=".subsite-news-container">
            <xsl:for-each css:select="#homepage-news .homepage-newsitem">
                <div class="large-4 columns">
                    <div class="news-item">
                        <xsl:if test="div/div/img">
                            <h2><xsl:copy-of select="div/div/h3/a"/></h2>
                            <xsl:copy-of select="div/div/img"/>
                            <p><xsl:value-of select="div/div/p/text()"/></p>
                        </xsl:if>
                        <xsl:if test="not(div/div/img)">
                            <h2><xsl:copy-of select="div/div/h3/a"/></h2>
                            <p><xsl:value-of select="div/div/p/text()"/></p>
                        </xsl:if>
                    </div>
                </div>
            </xsl:for-each>
        </replace>
    </rules>
    
    <!--main homepage-->
    <!--<rules css:if-content="#homepage5-view.homepage-normal-width">-->
    <rules css:if-content=".template-view.portaltype-wcc-homepage-homepage">
        <theme href="index.html" />
        <replace css:theme-children=".news-list-container">
            <xsl:for-each css:select="#homepage-news .homepage-newsitem">
                <div class="clearfix news-list-item">
                    <xsl:if test="div/div/img">
                        <div class="news-img"><xsl:copy-of select="div/div/img"/></div>
                        <div class="news-content">
                            <h3><xsl:copy-of select="div/div/h3/a"/></h3>
                            <p><xsl:value-of select="div/div/p/text()"/></p>
                        </div>
                    </xsl:if>
                    <xsl:if test="not(div/div/img)">
                        <h3><xsl:copy-of select="div/div/h3/a"/></h3>
                        <p><xsl:value-of select="div/div/p/text()"/></p>
                    </xsl:if>
                </div>

            </xsl:for-each>
            <div class="clearfix news-list-morelink" style="text-align:right;margin:10px">
                <xsl:copy-of css:select=".homepage-morenews > a"/>
            </div>
        </replace>

        <replace css:theme-children=".events-list-container">
            <xsl:if test="//h2[@id='homepage-events-title']/text()">
                <h2 class="portlet-header"><xsl:value-of select="//h2[@id='homepage-events-title']/text()"/></h2>
            </xsl:if>
            <xsl:for-each css:select=".homepage-event">
                <div class="clearfix events-list-item">
                    <xsl:copy-of select="p"/>
                </div>
            </xsl:for-each>
        </replace>
    </rules>
    
    
    
    <!--for all homepage-->
    <after css:theme=".subsite-news-container">
        <div class="clearfix news-list-morelink" style="text-align:right;margin-bottom:15px">
            <div class="large-12 column">
                <xsl:copy-of css:select=".homepage-morenews > a"/>
                <xsl:copy-of css:select=".homepage3-morenews > a"/>
            </div>
        </div>
    </after>
    <after css:theme=".focus-container">
        <div style="margin-top:20px">
            <xsl:copy-of css:select="#edit-bar"/>
        </div>
    </after>
    <!--slider-->
    <replace css:theme-children=".focus-container" css:if-content="#homepage-slider">
        
        <ul class="sliders-wrap-inner2" style="display:none">
            <xsl:for-each css:select="ul.sliders-wrap-inner li">
                <li>
                    <xsl:copy-of select="a"/>
                </li>
            </xsl:for-each>
        </ul>
        
        <div id="slider1_container" style="position: relative; top: 0px; left: 0px; width: 810px; height: 340px; background: #E3E2DB; overflow: hidden; ">

            <!-- Loading Screen -->
            <div u="loading" style="position: absolute; top: 0px; left: 0px;">
                <div style="filter: alpha(opacity=70); opacity:0.7; position: absolute; display: block;
                    background-color: #000000; top: 0px; left: 0px;width: 100%;height:100%;">
                </div>
                <div style="position: absolute; display: block; background: url(++theme++wccresponsive.theme/images/loading.gif) no-repeat center center;
                    top: 0px; left: 0px;width: 100%;height:100%;">
                </div>
            </div>
    
            <!-- Slides Container -->
            <div u="slides" style="cursor: move; position: absolute; left: 0px; top: 0px; width: 545px; height: 340px;overflow: hidden;">           
                <xsl:for-each css:select="ul.navigator-wrap-inner li">
                    <div class="wrapInner">
                        <xsl:element name="img">
                            <xsl:attribute name="u">image</xsl:attribute>
                            <xsl:attribute name="class">nav-slider-img</xsl:attribute>
                            <xsl:attribute name="src"></xsl:attribute>
                        </xsl:element>
                        <div u="thumb">
                            <xsl:copy-of select="div/a/h2"/>
                            <p><xsl:value-of select="div/a/span"/></p>
                        </div>
                    </div>
                </xsl:for-each>
            </div>
            <!-- ThumbnailNavigator Skin Begin -->
            <div u="thumbnavigator" class="jssort11" style="position: absolute; width: 350px; height: 340px; left:465px; top:0px;">
                <!-- Thumbnail Item Skin Begin -->
                <style>
                    /* jssor slider thumbnail navigator skin 11 css */
                    /*
                    .jssort11 .p            (normal)
                    .jssort11 .p:hover      (normal mouseover)
                    .jssort11 .pav          (active)
                    .jssort11 .pav:hover    (active mouseover)
                    .jssort11 .pdn          (mousedown)
                    */
                    .jssort11
                    {
                            font-family: Arial, Helvetica, sans-serif;
                    }
                    .jssort11 .i, .jssort11 .pav:hover .i
                    {
                            position: absolute;
                            top:3px;
                            left:3px;
                            WIDTH: 60px;
                            HEIGHT: 30px;
                            border: white 1px dashed;
                    }
                    * html .jssort11 .i
                    {
                            WIDTH /**/: 62px;
                            HEIGHT /**/: 32px;
                    }
                    .jssort11 .pav .i
                    {
                            border: white 1px solid;
                    }
                    .jssort11 .t, .jssort11 .pav:hover .t
                    {
                            position: absolute;
                            top: 3px;
                            left: 68px;
                            width:129px;
                            height: 32px;
                            line-height:32px;
                            text-align: center;
                            color:#fc9835;
                            font-size:13px;
                            font-weight:700;
                    }
                    .jssort11 .pav .t, .jssort11 .phv .t, .jssort11 .p:hover .t
                    {
                            color:#fff;
                    }
                    .jssort11 .c, .jssort11 .pav:hover .c
                    {
                            position: absolute;
                            top: 38px;
                            left: 3px;
                            width:197px;
                            height: 31px;
                            line-height:31px;
                            color:#fff;
                            font-size:11px;
                            font-weight:400;
                            overflow: hidden;
                    }
                    .jssort11 .pav .c, .jssort11 .phv .c, .jssort11 .p:hover .c
                    {
                            color:#fc9835;
                    }
                    .jssort11 .t, .jssort11 .c
                    {
                            transition: color 2s;
                        -moz-transition: color 2s;
                        -webkit-transition: color 2s;
                        -o-transition: color 2s;
                    }
                    .jssort11 .p:hover .t, .jssort11 .phv .t, .jssort11 .pav:hover .t, .jssort11 .p:hover .c, .jssort11 .phv .c, .jssort11 .pav:hover .c
                    {
                            transition: none;
                        -moz-transition: none;
                        -webkit-transition: none;
                        -o-transition: none;
                    }
                    .jssort11 .p
                    {
                            /*background:#181818;*/
                            color: #800000;
                    }
                    .jssort11 .pav, .jssort11 .pdn
                    {
                            background: url(++theme++wccresponsive.theme/images/arrow.png) 45px 0 no-repeat transparent;
                            color: #fff !important;
                    }
                    .jssort11 .p:hover, .jssort11 .phv, .jssort11 .pav:hover
                    {
                            /*background:#333;*/
                    }
                    .jssort11 .pav h2, .jssort11 .pav span, .pdn h2, .jssort11 .pdn span{color: #fff}
                    .jssort11 .pav h2,
                    .jssort11 .pdn h2,
                    .jssort11 .p h2{
                      margin: 10px 10px 0 60px;
                      text-align: right;
                      padding-left: 40px;
                      line-height: 30px;
                    }
                    .jssort11 .pav p,
                    .jssort11 .pdn p,
                    .jssort11 .p p{
                        margin: -5px 10px 0 60px;
                        text-align: right;
                        padding-left: 40px;
                    }
                </style>
                <div u="slides" style="cursor: move;">
                    <div u="prototype" class="p" style="position: absolute; width: 340px; height: 80px; top: 0; left: 0;">
                        <div u="thumbnailtemplate" style=" width: 100%; height: 100%; border: none;position:absolute; top: 0; left: 0;"></div>
                    </div>
                </div>
                <!-- Thumbnail Item Skin End -->
            </div>
            <!-- ThumbnailNavigator Skin End -->
    
        </div>
    </replace>

    <!--<rules if-content="//body[contains(@class,'template-edit')] or //body[contains(@class,'template-atct_edit')]">-->
    <!--    <theme href="content.html" />-->
    <!--</rules>-->
    
    <!--content-->
    <theme href="content-center.html" if-content="//div[@id='portal-column-one'] and //div[@id='portal-column-two']"/>
    <theme href="content-right.html" css:if-content="#portal-column-one"/>
    <theme href="content-left.html" css:if-content="#portal-column-two"/>
    <theme href="content.html"/>

    <after css:theme="#main" css:content="#plone-analytics"/>
    <replace css:theme-children="#wcc-copyright" css:content-children="#wcc-copyright"/>
    
    <drop theme="/html/body/script" />
    <after css:theme-children="body">
        <script src="++theme++wccresponsive.theme/js/foundation.min.js"></script>
        <script src="++theme++wccresponsive.theme/js/tinynav.min.js"></script>
        
        <xsl:if css:test=".template-view.portaltype-wcc-homepage-homepage">
            <script src="++theme++wccresponsive.theme/js/jssor.js"></script>
            <script src="++theme++wccresponsive.theme/js/jssor.slider.js"></script>
            <script>
                jssor_slider1_starter = function (containerId) {
                    var options = {
                        $AutoPlay: true,                                    //[Optional] Whether to auto play, to enable slideshow, this option must be set to true, default value is false
                        $AutoPlaySteps: 1,                                  //[Optional] Steps to go for each navigation request (this options applys only when slideshow disabled), the default value is 1
                        $AutoPlayInterval: 1000,                            //[Optional] Interval (in milliseconds) to go for next slide since the previous stopped if the slider is auto playing, default value is 3000
                        $PauseOnHover: 1,                               //[Optional] Whether to pause when mouse over if a slider is auto playing, 0 no pause, 1 pause for desktop, 2 pause for touch device, 3 pause for desktop and touch device, 4 freeze for desktop, 8 freeze for touch device, 12 freeze for desktop and touch device, default value is 1
                        $Loop: 0,                                       //[Optional] Enable loop(circular) of carousel or not, 0: stop, 1: loop, 2 rewind, default value is 1
        
                        $ArrowKeyNavigation: true,   			            //[Optional] Allows keyboard (arrow key) navigation or not, default value is false
                        $SlideDuration: 500,                                //[Optional] Specifies default duration (swipe) for slide in milliseconds, default value is 500
                        $MinDragOffsetToSlide: 20,                          //[Optional] Minimum drag offset to trigger slide , default value is 20
                        //$SlideWidth: 600,                                 //[Optional] Width of every slide in pixels, default value is width of 'slides' container
                        //$SlideHeight: 300,                                //[Optional] Height of every slide in pixels, default value is height of 'slides' container
                        $SlideSpacing: 5, 					                //[Optional] Space between each slide in pixels, default value is 0
                        $DisplayPieces: 1,                                  //[Optional] Number of pieces to display (the slideshow would be disabled if the value is set to greater than 1), the default value is 1
                        $ParkingPosition: 0,                                //[Optional] The offset position to park slide (this options applys only when slideshow disabled), default value is 0.
                        $UISearchMode: 1,                                   //[Optional] The way (0 parellel, 1 recursive, default value is 1) to search UI components (slides container, loading screen, navigator container, arrow navigator container, thumbnail navigator container etc).
                        $PlayOrientation: 1,                                //[Optional] Orientation to play slide (for auto play, navigation), 1 horizental, 2 vertical, 5 horizental reverse, 6 vertical reverse, default value is 1
                        $DragOrientation: 3,                                //[Optional] Orientation to drag slide, 0 no drag, 1 horizental, 2 vertical, 3 either, default value is 1 (Note that the $DragOrientation should be the same as $PlayOrientation when $DisplayPieces is greater than 1, or parking position is not 0)
        
                        $ThumbnailNavigatorOptions: {
                            $Class: $JssorThumbnailNavigator$,              //[Required] Class to create thumbnail navigator instance
                            $ChanceToShow: 2,                               //[Required] 0 Never, 1 Mouse Over, 2 Always
        
                            $Loop: 2,                                       //[Optional] Enable loop(circular) of carousel or not, 0: stop, 1: loop, 2 rewind, default value is 1
                            $AutoCenter: 3,                                 //[Optional] Auto center thumbnail items in the thumbnail navigator container, 0 None, 1 Horizontal, 2 Vertical, 3 Both, default value is 3
                            $Lanes: 1,                                      //[Optional] Specify lanes to arrange thumbnails, default value is 1
                            $SpacingX: 4,                                   //[Optional] Horizontal space between each thumbnail in pixel, default value is 0
                            $SpacingY: 4,                                   //[Optional] Vertical space between each thumbnail in pixel, default value is 0
                            $DisplayPieces: 4,                              //[Optional] Number of pieces to display, default value is 1
                            $ParkingPosition: 0,                            //[Optional] The offset position to park thumbnail
                            $Orientation: 2,                                //[Optional] Orientation to arrange thumbnails, 1 horizental, 2 vertical, default value is 1
                            $DisableDrag: false                             //[Optional] Disable drag or not, default value is false
                        }
                    };
        
                    var jssor_slider1 = new $JssorSlider$(containerId, options);
        
                    //responsive code begin
                    //you can remove responsive code if you don't want the slider scales while window resizes
                    function ScaleSlider() {
                        var parentWidth = jssor_slider1.$Elmt.parentNode.clientWidth;
                        if (parentWidth) {
                            var sliderWidth = parentWidth;
        
                            //keep the slider width no more than 810
                            sliderWidth = Math.min(sliderWidth, 810);
        
                            jssor_slider1.$ScaleWidth(sliderWidth);
                        }
                        else
                            $Jssor$.$Delay(ScaleSlider, 30);
                    }
        
                    ScaleSlider();
                    $Jssor$.$AddEvent(window, "load", ScaleSlider);
        
                    $Jssor$.$AddEvent(window, "resize", $Jssor$.$WindowResizeFilter(window, ScaleSlider));
                    $Jssor$.$AddEvent(window, "orientationchange", ScaleSlider);
                    //responsive code end
                };
            </script>
            <script>
                jssor_slider1_starter('slider1_container');
            </script>
            <script>
                $(function(){
                    //alert($('ul.sliders-wrap-inner2 li').length);
                    //alert($('div.wrapInner').length);
                    //if ($('ul.sliders-wrap-inner2 li').length == $('div.wrapInner').length){
                        var picNum = $('ul.sliders-wrap-inner2 li').length;
                        $('ul.sliders-wrap-inner2 li').each(function(key, value){
                            imgSrc = $('> a > img', this).attr('src');
                            $('img.nav-slider-img:eq('+key+')').attr('src', imgSrc);  
                            $('img.nav-slider-img:eq('+(picNum+key)+')').attr('src', imgSrc);
                        });
                    //}
                });
            </script>
        </xsl:if>
        <script src="++theme++wccresponsive.theme/js/app.js"></script>
    </after>
    
</rules><!--end main rule-->
